{
	admin off
	order replace before encode
	order replace after vars
	order replace after copy_response
	cache {
		ttl 86400s
		mode bypass
		default_cache_control public, max-age=86400
		key {
			disable_scheme
		}
		nuts {
			configuration {
				Dir /data/nuts
			}
		}
	}
}

(clean_headers) {
	header_up -Cookie
	header_up -X-Forwarded-For
	header_up -X-Forwarded-Host
	header_up -X-Forwarded-Proto
	header_up User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36"
	header_up Accept-Encoding identity
	header_down -Cache-Control
	header_down -Cookie
	header_down -Report-To
	header_down -Content-Security-Policy-Report-Only
	header_down -Cross-Origin-Opener-Policy
	header_down -Cross-Origin-Resource-Policy
	header_down -Link
}

:80

@resources {
	method GET HEAD
	path /css /css2 /icon
}

handle @resources {
	cache

	reverse_proxy @resources https://fonts.googleapis.com {
		header_up Host {upstream_hostport}
		import clean_headers
	}

	replace stream {
		"https://fonts.gstatic.com/s" {env.STATIC_URL}
		# unfortunately the following does not work yet
		# "https://fonts.gstatic.com/s" {http.request.header.X-Forwarded-Proto}://{http.request.header.X-Forwarded-Host}:{http.request.header.X-Forwarded-Port}/s
		# 
		# Needs https://github.com/caddyserver/replace-response/issues/26
		# to allow placeholders
		# 
		# Needs https://github.com/caddyserver/replace-response/issues/31
		# to allow conditionals
	}
}

@static {
	method GET HEAD
	path /s/*
}
handle @static {
	cache

	reverse_proxy https://fonts.gstatic.com {
		header_up Host {upstream_hostport}
		import clean_headers
	}
}

@ajax {
	method GET HEAD
	path /ajax/*
}
handle @ajax {
	cache

	reverse_proxy https://ajax.googleapis.com {
		header_up Host {upstream_hostport}
		import clean_headers
	}
}

@npm {
	method GET HEAD
	path /npm/*
}
handle @npm {
	cache

	reverse_proxy https://cdn.jsdelivr.net {
		header_up Host {upstream_hostport}
		import clean_headers
	}
}

# Debug endpoint, to check if any private information gets leaked
@debug {
	method GET
	path /debug
}
handle @debug {
	rewrite * /get
	reverse_proxy https://httpbin.org {
		header_up Host {upstream_hostport}
		import clean_headers
	}
}

@tracingEnabled expression {env.OTEL_EXPORTER_OTLP_ENDPOINT} != ""
tracing @tracingEnabled {
	span {uri}
}

respond / 204
